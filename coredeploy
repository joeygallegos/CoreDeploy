#!/bin/bash
# load deploy config variables
. /home/deploy.config

echo "Application starting up.."
echo "Staging: $staging_dir"
echo "Production: $production_dir"
echo "Backup: $backup_dir"
echo "Application config: $app_config"

check_for_update() {

	now="$(date +'%m_%d_%Y_%H_%M')"
	temp_download_dir="/home/deploy/temp/"
	install_dir="/usr/bin/"

	download_file_name=$temp_download_dir$now"/coredeploy"

	# download the new file from github
	wget -c -O $download_file_name "https://raw.githubusercontent.com/joeygallegos/CoreDeploy/master/coredeploy"

	# copy to install dir
	cp -f $download_file_name $install_dir"/coredeploy"
}

check_for_update

if [[ $# -eq 0 ]]; then
	# grant permissions to staging dir
	chmod -R 777 $staging_dir*
else

	if [[ $1 = "build" ]]; then
		/usr/bin/php /var/www/staging/app/tasks/deploy/cache.php
		/usr/bin/php /var/www/production/app/tasks/deploy/cache.php
	fi

	# this command is used for moving files from staging dir to the production dir
	if [ $1 = "production" ] || [ $1 = "prod" ]; then

		# copy backup code into dir
		echo "Copying last code release to directory.."
		now="$(date +'%m_%d_%Y_%H_%M')"

		# create backup dir with today's date and copy all files from prod dir to backup dir
		echo "Creating the backup directory for the production dir.."
		mkdir $backup_dir$now/

		echo "Copy production files to the backup dir.."
		cp -R $production_dir* $backup_dir$now/

		# cleanout production app dir
		echo "Deleting production app dir files.."
		rm -rf /var/www/production/app/*

		# remove code files, do not delete images
		rm -rf /var/www/production/public/assets/scripts/*.js
		rm -rf /var/www/production/public/assets/scss/*.scss

		# deploy staging code to production dir
		# avoid copying logs from staging to production
		echo "Copying staging files to production.."
		cp -R $staging_dir"app/*" $production_dir"app"
		cp -R $staging_dir"public/*" $production_dir"public"

		# copy staging composer file to production
		cp -R $staging_dir"composer.json" $production_dir"/composer.json"

		# restore config to production directory from backup directory
		cp -R $backup_dir$now"/app/env/"$app_config $production_dir"app/env/"$app_config

		# update composer data
		echo "Running composer install.."

		# update composer dependencies
		composer install && composer update
		composer dump-autoload -o # efficient

		# grant permissions in prod dir
		echo "Granting permissions to production directory.."
		chmod -R 777 $production_dir*
	else
		echo "Invalid argument provided.."
	fi
fi